git add -A 可以一下子把所有的文件都加在stage里 ：）
用.比较危险，*.txt还好点，最好还是一个文件一个文件add
现在，使用两次命令git add ,这里可以顺带提议git add . （后面加点这个参数，目录下文件都提交。）

提交后，用git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别：
如果有光标停留在END处走不动的，可以按q继续执行

命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：

一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

总之，就是让这个文件回到最近一次git commit或git add时的状态。
git checkout -- file命令中的--很重要，没有--，就变成了“创建一个新分支”的命令，我们在后面的分支管理中会再次遇到git checkout命令。

git checkout -- filename 中的「--」应该只是用来指明后面跟的是文件名，而不是可能存在的分支名，如果「创建新分支」的话应该是带上 -b 选项才对。

清空缓存区中的某文件记录
git reset HEAD readme.txt

删除版本库文件
$ git rm test.txt
rm 'test.txt'
$ git commit -m "remove test.txt"

//ssh模式关联远程库
git remote add origin git@server-name:path/repo-name.git
//https模式
git remote add origin https://github.com/path/repo-name.git